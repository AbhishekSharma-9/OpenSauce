name: Auto Label Valid Hacktoberfest PRs

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  add-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Check validation status
        id: check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const statuses = await github.rest.repos.listCommitStatusesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            const validation = statuses.data.find(s => s.context === 'PR Code Validation');
            core.setOutput('is_valid', validation && validation.state === 'success' ? 'true' : 'false');

      - name: Add Hacktoberfest labels
        if: steps.check.outputs.is_valid == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ['Hacktoberfest', 'Hacktoberfest-accepted']
            });

      - name: Comment success
        if: steps.check.outputs.is_valid == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: "‚úÖ **Code validation passed!**\n\nYour PR has been labeled for Hacktoberfest üéâ\n\nThanks for contributing üíñ"
            });

      - name: Comment failure
        if: steps.check.outputs.is_valid != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: "‚ùå **Code validation failed.**\n\nPlease make sure your code files are not empty and follow the repository's contribution rules."
            });
